commit 55bb0f76266730a0e51038dc42f995bffeab7f70
Author: Michael Still <mikal@stillhq.com>

    libvirt: Add guest devices to support SPICE USB.

    SPICE can pass through USB devices from the client to the guest
    as long as the domain XML in libvirt is configured to support it.
    This patch adds the devices required for this functionality.

diff --git a/nova/tests/unit/virt/libvirt/test_driver.py b/nova/tests/unit/virt/libvirt/test_driver.py
index 5b3f8a6ec5..c420ae98d7 100644
--- a/nova/tests/unit/virt/libvirt/test_driver.py
+++ b/nova/tests/unit/virt/libvirt/test_driver.py
@@ -5877,26 +5877,33 @@ class LibvirtConnTestCase(test.NoDBTestCase,
         self.flags(pointer_model='usbtablet')

         cfg = self._get_guest_config_with_graphics()
+        devices = iter(cfg.devices)

-        self.assertEqual(len(cfg.devices), 9)
-        self.assertIsInstance(cfg.devices[0],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[1],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[2],
-                              vconfig.LibvirtConfigGuestSerial)
-        self.assertIsInstance(cfg.devices[3],
-                              vconfig.LibvirtConfigGuestGraphics)
-        self.assertIsInstance(cfg.devices[4],
-                              vconfig.LibvirtConfigGuestVideo)
-        self.assertIsInstance(cfg.devices[5],
-                              vconfig.LibvirtConfigGuestInput)
-        self.assertIsInstance(cfg.devices[6],
-                              vconfig.LibvirtConfigGuestRng)
-        self.assertIsInstance(cfg.devices[7],
-                              vconfig.LibvirtConfigGuestUSBHostController)
-        self.assertIsInstance(cfg.devices[8],
-                              vconfig.LibvirtConfigMemoryBalloon)
+        self.assertEqual(len(cfg.devices), 12)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestSerial)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestGraphics)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestVideo)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestInput)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestRng)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBHostController)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigMemoryBalloon)

         self.assertEqual(cfg.devices[3].type, 'spice')
         self.assertEqual(cfg.devices[3].listen, '10.0.0.1')
@@ -5931,10 +5938,10 @@ class LibvirtConnTestCase(test.NoDBTestCase,
             cfg = self._get_guest_config_with_graphics()

             if guestarch != fields.Architecture.AARCH64:
-                self.assertEqual(len(cfg.devices), 9)
+                self.assertEqual(len(cfg.devices), 12)
             else:
                 # AArch64 adds a keyboard by default
-                self.assertEqual(len(cfg.devices), 10)
+                self.assertEqual(len(cfg.devices), 13)

             devices = iter(cfg.devices)

@@ -5960,6 +5967,12 @@ class LibvirtConnTestCase(test.NoDBTestCase,
                 next(devices), vconfig.LibvirtConfigGuestRng)
             self.assertIsInstance(
                 next(devices), vconfig.LibvirtConfigGuestUSBHostController)
+            self.assertIsInstance(
+                next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+            self.assertIsInstance(
+                next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+            self.assertIsInstance(
+                next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
             self.assertIsInstance(
                 next(devices), vconfig.LibvirtConfigMemoryBalloon)

@@ -5989,26 +6002,33 @@ class LibvirtConnTestCase(test.NoDBTestCase,
         self.flags(pointer_model='usbtablet')

         cfg = self._get_guest_config_with_graphics()
+        devices = iter(cfg.devices)

-        self.assertEqual(len(cfg.devices), 9)
-        self.assertIsInstance(cfg.devices[0],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[1],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[2],
-                              vconfig.LibvirtConfigGuestSerial)
-        self.assertIsInstance(cfg.devices[3],
-                              vconfig.LibvirtConfigGuestGraphics)
-        self.assertIsInstance(cfg.devices[4],
-                              vconfig.LibvirtConfigGuestVideo)
-        self.assertIsInstance(cfg.devices[5],
-                              vconfig.LibvirtConfigGuestInput)
-        self.assertIsInstance(cfg.devices[6],
-                              vconfig.LibvirtConfigGuestRng)
-        self.assertIsInstance(cfg.devices[7],
-                              vconfig.LibvirtConfigGuestUSBHostController)
-        self.assertIsInstance(cfg.devices[8],
-                              vconfig.LibvirtConfigMemoryBalloon)
+        self.assertEqual(len(cfg.devices), 12)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestSerial)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestGraphics)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestVideo)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestInput)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestRng)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBHostController)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigMemoryBalloon)

         self.assertEqual(cfg.devices[3].type, 'spice')
         self.assertEqual(cfg.devices[3].listen, '10.0.0.1')
@@ -6030,26 +6050,33 @@ class LibvirtConnTestCase(test.NoDBTestCase,
         self.flags(pointer_model='usbtablet')

         cfg = self._get_guest_config_with_graphics()
+        devices = iter(cfg.devices)

-        self.assertEqual(len(cfg.devices), 9)
-        self.assertIsInstance(cfg.devices[0],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[1],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[2],
-                              vconfig.LibvirtConfigGuestSerial)
-        self.assertIsInstance(cfg.devices[3],
-                              vconfig.LibvirtConfigGuestGraphics)
-        self.assertIsInstance(cfg.devices[4],
-                              vconfig.LibvirtConfigGuestVideo)
-        self.assertIsInstance(cfg.devices[5],
-                              vconfig.LibvirtConfigGuestInput)
-        self.assertIsInstance(cfg.devices[6],
-                              vconfig.LibvirtConfigGuestRng)
-        self.assertIsInstance(cfg.devices[7],
-                              vconfig.LibvirtConfigGuestUSBHostController)
-        self.assertIsInstance(cfg.devices[8],
-                              vconfig.LibvirtConfigMemoryBalloon)
+        self.assertEqual(len(cfg.devices), 12)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestSerial)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestGraphics)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestVideo)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestInput)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestRng)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBHostController)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigMemoryBalloon)

         self.assertEqual(cfg.devices[3].type, 'spice')
         self.assertEqual(cfg.devices[3].listen, '10.0.0.1')
@@ -6981,25 +7008,33 @@ class LibvirtConnTestCase(test.NoDBTestCase,

         cfg = drvr._get_guest_config(instance_ref, [],
                                      image_meta, disk_info)
-        self.assertEqual(9, len(cfg.devices))
-        self.assertIsInstance(cfg.devices[0],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[1],
-                              vconfig.LibvirtConfigGuestDisk)
-        self.assertIsInstance(cfg.devices[2],
-                              vconfig.LibvirtConfigGuestSerial)
-        self.assertIsInstance(cfg.devices[3],
-                              vconfig.LibvirtConfigGuestChannel)
-        self.assertIsInstance(cfg.devices[4],
-                              vconfig.LibvirtConfigGuestGraphics)
-        self.assertIsInstance(cfg.devices[5],
-                              vconfig.LibvirtConfigGuestVideo)
-        self.assertIsInstance(cfg.devices[6],
-                              vconfig.LibvirtConfigGuestRng)
-        self.assertIsInstance(cfg.devices[7],
-                              vconfig.LibvirtConfigGuestUSBHostController)
-        self.assertIsInstance(cfg.devices[8],
-                              vconfig.LibvirtConfigMemoryBalloon)
+        devices = iter(cfg.devices)
+        self.assertEqual(12, len(cfg.devices))
+
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestDisk)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestSerial)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestChannel)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestGraphics)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestVideo)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestRng)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBHostController)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigGuestUSBRedirect)
+        self.assertIsInstance(
+            next(devices), vconfig.LibvirtConfigMemoryBalloon)

         self.assertEqual(cfg.devices[4].type, "spice")
         self.assertEqual(cfg.devices[5].type, "qxl")
diff --git a/nova/virt/libvirt/config.py b/nova/virt/libvirt/config.py
index a4a3ed5769..448237b064 100644
--- a/nova/virt/libvirt/config.py
+++ b/nova/virt/libvirt/config.py
@@ -3902,3 +3902,19 @@ class LibvirtConfigGuestQemuCommandLine(LibvirtConfigObject):
         if not required:
             return None
         return meta
+
+
+class LibvirtConfigGuestUSBRedirect(LibvirtConfigObject):
+
+    def __init__(self, **kwargs):
+        super(LibvirtConfigGuestUSBRedirect,
+              self).__init__(root_name='redirdev')
+
+        self.type = 'spicevmc'
+        self.bus = 'usb'
+
+    def format_dom(self):
+        meta = self._new_node('redirdev')
+        meta.set('type', str(self.type))
+        meta.set('bus', str(self.bus))
+        return meta
diff --git a/nova/virt/libvirt/driver.py b/nova/virt/libvirt/driver.py
index bbc5c39d10..faff5993f2 100644
--- a/nova/virt/libvirt/driver.py
+++ b/nova/virt/libvirt/driver.py
@@ -6908,9 +6908,22 @@ class LibvirtDriver(driver.ComputeDriver):
                 # libvirt errors and the instances not being able to build
                 usbhost.model = None
             else:
+                # NOTE(mikal): disable USB entirely.
                 usbhost.model = 'none'
+
+        if CONF.spice.enabled:
+            # NOTE(mikal): For USB passthrough to work in SPICE, we need a
+            # specific USB controller model and three redirection devices
+            # as well.
+            usbhost.model = 'nec-xhci'
+
         guest.add_device(usbhost)

+        if CONF.spice.enabled:
+            # NOTE(mikal): those redirection devices I promised.
+            for i in range(3):
+                guest.add_device(vconfig.LibvirtConfigGuestUSBRedirect())
+
     def _guest_add_pcie_root_ports(self, guest):
         """Add PCI Express root ports.

